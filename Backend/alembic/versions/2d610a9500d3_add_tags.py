"""Add tags

Revision ID: 2d610a9500d3
Revises: 85a06c60ed74
Create Date: 2022-07-12 15:47:55.022331

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '2d610a9500d3'
down_revision = '85a06c60ed74'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tags',
    sa.Column('id', sa.CHAR(length=36), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tags_id'), 'tags', ['id'], unique=True)
    op.create_index(op.f('ix_tags_type'), 'tags', ['type'], unique=True)
    op.create_table('instructor_tags',
    sa.Column('id', sa.CHAR(length=36), nullable=False),
    sa.Column('tag_id', sa.CHAR(length=36), nullable=True),
    sa.Column('instructor_id', sa.CHAR(length=36), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['instructor_id'], ['instructors.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_instructor_tags_id'), 'instructor_tags', ['id'], unique=True)
    op.create_table('post_tags',
    sa.Column('id', sa.CHAR(length=36), nullable=False),
    sa.Column('tag_id', sa.CHAR(length=36), nullable=True),
    sa.Column('post_id', sa.CHAR(length=36), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_post_tags_id'), 'post_tags', ['id'], unique=True)
    op.add_column('instructors', sa.Column('hour_price', sa.Float(), nullable=True))
    op.add_column('instructors', sa.Column('lesson_price', sa.Float(), nullable=True))
    op.drop_column('post_votes', 'status')
    op.drop_column('comment_votes', 'status')
    op.drop_column('instructors', 'experience')
    op.drop_column('instructors', 'specialty')
    op.drop_column('instructors', 'organization')
    op.add_column('users', sa.Column('dob', sa.TIMESTAMP(), nullable=True))
    op.add_column('users', sa.Column('gender', sa.String(), nullable=True))
    op.add_column('users', sa.Column('account_type', sa.String(), nullable=True, default="Learner"))
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('users', 'account_type')
    op.drop_column('users', 'gender')
    op.drop_column('users', 'dob')
    op.add_column('post_votes', sa.Column('status', sa.BOOLEAN, nullable=False))
    op.add_column('comment_votes', sa.Column('status', sa.BOOLEAN, nullable=False))
    op.add_column('instructors', sa.Column('organization', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('instructors', sa.Column('specialty', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('instructors', sa.Column('experience', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_column('instructors', 'lesson_price')
    op.drop_column('instructors', 'hour_price')
    op.drop_index(op.f('ix_post_tags_id'), table_name='post_tags')
    op.drop_table('post_tags')
    op.drop_index(op.f('ix_instructor_tags_id'), table_name='instructor_tags')
    op.drop_table('instructor_tags')
    op.drop_index(op.f('ix_tags_type'), table_name='tags')
    op.drop_index(op.f('ix_tags_id'), table_name='tags')
    op.drop_table('tags')
    # ### end Alembic commands ###
